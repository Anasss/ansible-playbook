---

- hosts: all
  sudo: yes
  gather_facts: yes


  pre_tasks:

    - name: Fail if Ansible is old
      fail:
        msg: "We have only tested with Ansible version 1.2+. Please update Ansible"
      when: ansible_product_version < '1.2'

    - name: Include vars from local-configure.yml if found
      include_vars: "{{ item }}"
      with_first_found:
       - local-configure.yml
       - null.yml
      tags:
        - plone
        - haproxy
        - varnish
        - postfix
        - logwatch
        - munin
        - motd
        - nginx
        - timezone

    - name: Fail if no administrative email set
      fail:
        msg: "You must set the admin_email variable."
      when: not admin_email
      tags:
        - plone
        - haproxy
        - varnish
        - postfix
        - logwatch
        - munin
        - motd
        - nginx

    - name: Update host
      apt: upgrade=dist update_cache=yes

    - name: Ensure optional packages
      apt: pkg={{ item }} state=present
      with_items: additional_packages


  roles:

    - role: ANXS.hostname

    - role: jnv.unattended-upgrades
      when: auto_upgrades|default(True)
      unattended_mail: root
      unattended_origins_patterns:
        - 'origin=${distro_id},archive=${distro_codename}-security'
        - 'o=${distro_id},a=${distro_codename}'
        - 'o=${distro_id},a=${distro_codename}-updates'

    - role: tersmitten.fail2ban
      when: install_fail2ban|default(True)
      tags: fail2ban

    - role: plone.plone_server
      tags: plone

    - role: haproxy
      when: install_loadbalancer|default(True)
      tags: haproxy

    - role: varnish
      when: install_proxycache|default(True)
      tags: varnish

    - role: nginx
      when: install_webserver|default(True)
      tags: nginx

    - role: postfix
      when: install_mailserver|default(True)
      tags: postfix

    - role: logwatch
      when: install_logwatch|default(True)
      tags: logwatch

    - role: munin-node
      when: install_muninnode|default(True)
      tags: munin

    - role: restart_script
      tags: restart_script

    - role: motd
      when: install_motd|default(True)
      tags: motd

  tasks:

    - name: Set timezone variables
      tags: timezone
      copy: content={{ timezone|default("UTC\n") }}
            dest=/etc/timezone
            owner=root
            group=root
            mode=0644
            backup=yes
      notify:
        - update timezone

  handlers:
    - name: update timezone
      command: dpkg-reconfigure --frontend noninteractive tzdata

